## moved to application.yml

## Configure the SmallRye Kafka connector
#kafka.bootstrap.servers=10.96.148.253:9092

## Configure the Kafka sink (we write to it) - this connects to cluster1
#mp.messaging.outgoing.generated-price.bootstrap.servers=10.96.101.78:9092
#mp.messaging.outgoing.generated-price.connector=smallrye-kafka
#mp.messaging.outgoing.generated-price.topic=prices
#mp.messaging.outgoing.generated-price.health-readiness-enabled=false
#mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

## Configure the Kafka source (we read from it) - this connects to cluster1
#mp.messaging.incoming.prices.bootstrap.servers=10.96.101.78:9092
#mp.messaging.incoming.prices.connector=smallrye-kafka
#mp.messaging.incoming.prices.topic=prices
#mp.messaging.incoming.prices.health-readiness-enabled=false
#mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

## Configure the Kafka source (we write to it) - this connects to cluster2
#mp.messaging.outgoing.producer1.bootstrap.servers=10.96.63.82:9192
#mp.messaging.outgoing.producer1.connector=smallrye-kafka
#mp.messaging.outgoing.producer1.topic=topic1
#mp.messaging.outgoing.producer1.health-readiness-enabled=false
#mp.messaging.outgoing.producer1.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#mp.messaging.outgoing.producer1.value.serializer=org.apache.kafka.common.serialization.StringSerializer

## Configure the Kafka source (we read from it) - this connects to cluster2
#mp.messaging.incoming.consumer1.bootstrap.servers=10.96.63.82:9192
#mp.messaging.incoming.consumer1.connector=smallrye-kafka
#mp.messaging.incoming.consumer1.topic=topic1
#mp.messaging.incoming.consumer1.health-readiness-enabled=false
#mp.messaging.incoming.consumer1.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
#mp.messaging.incoming.consumer1.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#quarkus.kubernetes.namespace=kafka-client
#quarkus.kubernetes.part-of=kubernetes-quickstart
#quarkus.container-image.registry=docker.io
##registry (user) name
#quarkus.container-image.group=sankarganeshg
##repository name
#quarkus.container-image.name=kafka-quickstart
#quarkus.container-image.tag=2.0
#quarkus.kubernetes.image-pull-policy=Always
#quarkus.kubernetes.service-type=NodePort
#quarkus.container-image.build=true
#quarkus.container-image.push=true